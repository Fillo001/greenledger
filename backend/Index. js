import express from "express";
import cors from "cors";
import dotenv from "dotenv";
import { makeClient, ensureTopicId, submitAction } from "./utils/hedera.js";

dotenv.config();

const app = express();
app.use(cors());
app.use(express.json());

const PORT = process.env.PORT || 5000;
const OPERATOR_ID = process.env.OPERATOR_ID;
const OPERATOR_KEY = process.env.OPERATOR_KEY;
let TOPIC_ID = process.env.HEDERA_TOPIC_ID || "";

if (!OPERATOR_ID || !OPERATOR_KEY) {
  console.error("❌ Missing OPERATOR_ID or OPERATOR_KEY in .env");
  process.exit(1);
}

const client = makeClient(OPERATOR_ID, OPERATOR_KEY);

// Boot: ensure topic exists
(async () => {
  TOPIC_ID = await ensureTopicId(client, TOPIC_ID);
  console.log("✅ Hedera Topic ID:", TOPIC_ID);
})();

app.get("/health", (_req, res) => {
  res.json({ ok: true, topicId: TOPIC_ID });
});

app.post("/actions", async (req, res) => {
  try {
    const { type, latitude, longitude, photoHash, metadata } = req.body || {};
    if (!type) return res.status(400).json({ error: "type is required" });

    const payload = {
      type,
      lat: Number(latitude) || null,
      lng: Number(longitude) || null,
      photoHash: photoHash || null,
      metadata: metadata || {},
      ts: Date.now()
    };

    await submitAction(client, TOPIC_ID, payload);
    return res.json({ ok: true, topicId: TOPIC_ID, payload });
  } catch (e) {
    console.error(e);
    return res.status(500).json({ error: "failed_to_submit" });
  }
});

app.listen(PORT, () => console.log(`🌱 GreenLedger API on http://localhost:${PORT}`));
